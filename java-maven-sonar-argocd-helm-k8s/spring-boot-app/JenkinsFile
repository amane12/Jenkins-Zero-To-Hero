pipeline {
  agent any // Change to 'any' or a specific label for your build node

  tools {
    // Add the name of the Maven tool you configured in Global Tool Configuration
    maven 'Maven' 
    // You should also specify the JDK name you configured
    jdk 'Java'
  }

  stages {
    stage('Clean and Checkout') {
      steps {
        cleanWs()
        checkout scm
      }
    }
    stage('Clean Workspace and Temp') {
      steps {
        script {
          echo 'Cleaning workspace and temporary directories...'
          sh '''
            echo "Removing workspace directory contents"
            rm -rf "${WORKSPACE}/*"
            rm -rf "${WORKSPACE}/.jenkins.tmp" || true
          '''
          sh '''
            echo "Removing Jenkins tmp durable task directories"
            rm -rf "${WORKSPACE}/@tmp/durable-*"
          '''
        }
      }
    }
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'develop', url: 'https://github.com/amane12/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      // Remove the docker agent block entirely
      steps {
        sh 'ls -ltr'
        // The 'mvn' command will now use the configured Maven from the `tools` block
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://172.25.126.199:9000"
      }
      // Remove the docker agent block entirely
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      /*agent {
        docker {
          image 'ubuntu:latest'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
          reuseNode true
        }
      }*/
      environment {
        DOCKER_IMAGE = "shubh1641/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-credd')
      }
      steps {
        script {
          // You must install Docker on the agent, as it is no longer inherited from the Maven container
          /*sh '''
            apt-get update
            apt-get install -y sudo docker.io
          '''*/
          // Build Docker image
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh "docker build -t ${DOCKER_IMAGE} ."
          }
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-credd" ) {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "amane12"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config --global user.email "shubham.xyz@gmail.com"
                    git config --global user.name "Shubham"
                    git config --global credential.helper store
                    git pull origin develop
                    echo "Updating deployment file with new image tag..."
                    echo "Current BUILD_NUMBER is ${BUILD_NUMBER}"
                    echo "GIT_REPO_NAME is ${GIT_REPO_NAME}"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:develop
                '''
            }
        }
    }
  }
}